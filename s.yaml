edition: 1.0.0 #  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范
name: hello-mongo
access: "default" #  秘钥别名

vars: # 全局变量
  region: "cn-hongkong" # 来自 publish.yaml Parameters 参数定义, 更多关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
  service:
    name: "hello-world-service"
    description: 欢迎使用 ServerlessTool
    role: 'acs:ram::${config(AccountID)}:role/AliyunFcDefaultRole'
  functionName: "hello-mongo"

services:
  function-project: #  服务名称
    component: fc # 组件名称
    actions:
      pre-deploy: # 在deploy之前运行
        - run: bash ./.devsapp/fc.sh # 要执行的系统命令，类似于一种钩子的形式
          path: ./ # 执行系统命令/钩子的路径
      post-deploy:
        - run: rm -rf pkg
          path: ./
    props: #  组件的属性值
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: ${vars.functionName} # 函数名
        description: 这是一个 vapor 案例
        cAPort: 9000
        timeout: 30
        memorySize: 128
        cpu: 0.1
        diskSize: 512
        instanceConcurrency: 12
        runtime: custom.debian10
        codeUri: ./pkg
        handler: index.handler
        customRuntimeConfig:
          command:
            - ./scf_bootstrap
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
      # customDomains:
      #   - domainName: auto
      #     protocol: HTTP
      #     routeConfigs:
      #       - path: /*
      #         methods:
      #           - GET
      #           - POST
  # keep-warm: # 辅助函数, 2 min 定时预热
  #   component: fc # 组件名称
  #   # actions:
  #   #   post-deploy:
  #   #     - component: fc invoke --service-name ${function-project.output.service.name} --function-name nas-init
  #   props: # 组件的属性值
  #     region: ${vars.region}
  #     service: ${vars.service}
  #     function:
  #       name: keep-warm
  #       description: 'Serverless Devs Web Framework Helper Function'
  #       codeUri: './.devsapp/keep-warm'
  #       handler: index.handler
  #       runtime: python3
  #       timeout: 120
  #       memorySize: 128
  #       environmentVariables:
  #         KEEP_WARM_URL: ${function-project.output.url.system_url}
  #     triggers:
  #       - name: timerTrigger
  #         type: timer
  #         config:
  #           cronExpression: '@every 2m'
  #           enable: false

# END
